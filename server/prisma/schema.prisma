// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId            Int           @id @default(autoincrement())
  firstName         String
  lastName          String
  email             String        @unique
  password          String
  dateOfBirth       Date
  role              String

  polls             Poll[]
  votes             Vote[]
}

model Poll {
  pollId            Int           @id @default(autoincrement())
  title             String
  description       String
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  expiresAt         DateTime

  userId            Int
  user              User          @relation(fields: [userId], references:[userId])

  votes             Vote[]
  options           Option[]
}

model Vote {
  voteId            Int           @id @default(autoincrement())
  votedAt           DateTime      @default(now())
  
  optionId          Int
  option            Option        @relation(fields: [optionId], references:[optionId])

  pollId            Int
  poll              Poll          @relation(fields: [pollId], references:[pollId])

  userId            Int
  user              User          @relation(fields: [userId], references:[userId])
}

model Option {
  optionId          Int           @id @default(autoincrement())
  text              String
  voteCount         Int           @default(0)

  pollId            Int
  poll              Poll          @relation(fields: [pollId], references:[pollId])

  votes             Vote[]
}
